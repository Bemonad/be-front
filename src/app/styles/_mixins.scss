@import "vars";

@mixin smartphone {
  @media (max-width: #{$smarphone-width}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin font-size(
  $pxValueXs,
  $pxValueMd: $pxValueXs * 1.1,
  $pxValueLg: $pxValueXs * 1.2
) {
  @if ($pxValueXs < $minimumFontSize) {
    $pxValueXs: $pxValueLg;
  }
  $remValueXs: $pxValueXs / 10;
  font-size: #{$remValueXs}rem;

  @include tablet() {
    @if ($pxValueMd < $minimumFontSize) {
      $pxValueMd: $pxValueLg;
    }

    $remValueMd: $pxValueMd / 10;
    font-size: #{$remValueMd}rem;
  }

  @include desktop() {
    $remValueLg: $pxValueLg / 10;
    font-size: #{$remValueLg}rem;
  }
}

/* This generate spacing classes */
@mixin offset {
  @for $i from 1 through 10 {
    .t-offset-#{$i} {
      margin-top: ($spacing-basis * $i) !important;
    }
    .r-offset-#{$i} {
      margin-right: ($spacing-basis * $i) !important;
    }
    .b-offset-#{$i} {
      margin-bottom: ($spacing-basis * $i) !important;
    }
    .l-offset-#{$i} {
      margin-left: ($spacing-basis * $i) !important;
    }
  }
}

@include offset;
